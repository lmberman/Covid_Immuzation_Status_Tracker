CREATE TABLE USER_ROLE (
    ID INTEGER NOT NULL,
    ROLE VARCHAR(10) NOT NULL,
    DESCRIPTION VARCHAR(50),
    PRIMARY KEY (ID)
);

CREATE TABLE USERS (
    ID INTEGER,
    FIRSTNAME VARCHAR(100) NOT NULL,
    LASTNAME VARCHAR(100) NOT NULL,
    USERNAME VARCHAR(50) NOT NULL,
    PASSWORD VARCHAR(200) NOT NULL,
    ADDRESS VARCHAR(255) NOT NULL,
    ADDRESS2 VARCHAR(50),
    CITY VARCHAR(100) NOT NULL,
    STATE VARCHAR(100) NOT NULL,
    ZIP VARCHAR(12) NOT NULL,
    PHONE VARCHAR(20),
    EMAIL VARCHAR(200),
    ROLE_ID INTEGER NOT NULL,
    PRIMARY KEY (ID),
    FOREIGN KEY (ROLE_ID) REFERENCES USER_ROLE(ID)
);

CREATE TABLE CONTACT_EVENT (
    ID INTEGER NOT NULL,
    ADDRESS VARCHAR(45) NULL,
    START_TIME TIMESTAMP,
    END_TIME TIMESTAMP,
    EVENT_DETAILS VARCHAR(150),
    PRIMARY KEY (ID)
);

-- -----------------------------------------------------
-- Table `mydb`.`TestResult`
-- Status represents negative or positive results
-- if status is 'U' then the test is still waiting results
-- -----------------------------------------------------
CREATE TABLE TEST_RESULTS (
  USER_ID INT NOT NULL,
  STATUS CHAR(1) DEFAULT 'U',
  TEST_DATE DATE NOT NULL,
  CREATED_DATE TIMESTAMP NOT NULL,
  LAST_MODIFIED_DATE TIMESTAMP NOT NULL,
  PRIMARY KEY (USER_ID,TEST_DATE),
  FOREIGN KEY (USER_ID) REFERENCES USERS (ID)
);

-- Vaccination status of the user
CREATE TABLE VACCINATION_STATUS (
    ID INTEGER NOT NULL,
    VACCINE_TYPE VARCHAR(22) NOT NULL,
    USER_ID INT NOT NULL,
    VACCINATION_DATE DATE NOT NULL,
    CREATED_DATE TIMESTAMP NOT NULL,
    LAST_MODIFIED_DATE TIMESTAMP NOT NULL,
    PRIMARY KEY (USER_ID,VACCINATION_DATE,VACCINE_TYPE),
    FOREIGN KEY (USER_ID) REFERENCES USERS (ID)
);

-- -----------------------------------------------------
-- Table `mydb`.`PersonInEvent`
-- -----------------------------------------------------
CREATE TABLE PERSON_IN_EVENT (
  USER_ID INTEGER NOT NULL,
  CONTACT_EVENT_ID INTEGER NOT NULL,
  CONTACT_NOTES VARCHAR(250) NULL,
  PRIMARY KEY (USER_ID, CONTACT_EVENT_ID),
  FOREIGN KEY (USER_ID) REFERENCES USERS(ID),
  FOREIGN KEY (CONTACT_EVENT_ID) REFERENCES CONTACT_EVENT (ID)
 );